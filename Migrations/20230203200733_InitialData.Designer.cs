// <auto-generated />
using System;
using EFProject;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace EFProject.Migrations
{
    [DbContext(typeof(TasksContext))]
    [Migration("20230203200733_InitialData")]
    partial class InitialData
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("EFProject.Models.Category", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(150)
                        .HasColumnType("character varying(150)");

                    b.Property<int>("Weight")
                        .HasColumnType("integer");

                    b.HasKey("CategoryId");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            CategoryId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c657"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Pending activities",
                            Weight = 20
                        },
                        new
                        {
                            CategoryId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c602"),
                            CreationDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Name = "Personal activities",
                            Weight = 50
                        });
                });

            modelBuilder.Entity("EFProject.Models.Task", b =>
                {
                    b.Property<Guid>("TaskId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<Guid>("CategoryId")
                        .HasColumnType("uuid");

                    b.Property<DateTime>("CreationDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("Description")
                        .HasColumnType("text");

                    b.Property<int>("TaskPriority")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("character varying(200)");

                    b.HasKey("TaskId");

                    b.HasIndex("CategoryId");

                    b.ToTable("Task", (string)null);

                    b.HasData(
                        new
                        {
                            TaskId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c100"),
                            CategoryId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c657"),
                            CreationDate = new DateTime(2023, 2, 3, 17, 7, 33, 858, DateTimeKind.Local).AddTicks(5894),
                            TaskPriority = 1,
                            Title = "Payment of public services"
                        },
                        new
                        {
                            TaskId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c101"),
                            CategoryId = new Guid("c4e0d0e7-5f06-48c7-9246-11fe12f2c602"),
                            CreationDate = new DateTime(2023, 2, 3, 17, 7, 33, 858, DateTimeKind.Local).AddTicks(5919),
                            TaskPriority = 0,
                            Title = "Finish watching movie"
                        });
                });

            modelBuilder.Entity("EFProject.Models.Task", b =>
                {
                    b.HasOne("EFProject.Models.Category", "Category")
                        .WithMany("Tasks")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("EFProject.Models.Category", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
